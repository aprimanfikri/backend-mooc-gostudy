{
  "openapi": "3.0.0",
  "info": {
    "title": "Binar Final Project Massive Open Online Course (MOOC) API - GoStudy (C9)",
    "description": "Ini merupakan API Collection dari Final Project Tim C9. Saat ini API yang tersedia yaitu untuk tag Users dan untuk tag lainnya akan ditambahkan secara berkala.",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Ini adalah API untuk AUTH resources yang di dalamya terdiri dari beberapa endpoint"
    },
    {
      "name": "Users",
      "description": "Ini adalah API untuk USERS resources yang di dalamya terdiri dari beberapa endpoint"
    },
    {
      "name": "Category",
      "description": "API untuk resources Category yang terdiri dari beberapa endpoint"
    },
    {
      "name": "Course",
      "description": "API untuk resources Course yang terdiri dari beberapa endpoint"
    },
    {
      "name": "Chapter",
      "description": "API untuk resources Chapter yang terdiri dari beberapa endpoint"
    },
    {
      "name": "Module",
      "description": "API untuk resources Module yang terdiri dari beberapa endpoint"
    },
    {
      "name": "Payment",
      "description": "API untuk resources Payment yang terdiri dari beberapa endpoint"
    }
  ],

  "paths": {
    "/api/v1/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register user",
        "description": "Ini adalah API endpoint yang digunakan untuk register new user",
        "requestBody": {
          "description": "Request body untuk sukses registration",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": " Full name of the user",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address of the user",
                    "example": "johndoe@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password of the user",
                    "example": "12345678"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone Number of the user",
                    "example": "081958883820"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "User registered successfully"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Register New User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "email already registered or password less than 8 characters"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error User Registration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during user registration  "
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/resend": {
      "post": {
        "tags": ["Auth"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Ini adalah endpoint API yang digunakan untuk Resend OTP",
        "responses": {
          "200": {
            "description": "OTP Successfully Sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "OTP Successfully Sent"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed to resend OTP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "failed to send otp"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error to resend the OTP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during the resend otp process"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/verify": {
      "post": {
        "tags": ["Auth"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Verify a user",
        "description": "Ini adalah API endpoint yang digunakan untuk verify a user berdasarkan OTP yang disediakan. User harus mengirimkan OTP yang diterima saat proses registrasi untuk menyelesaikan verifikasi",
        "requestBody": {
          "description": "Request body untuk sukses verification",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "string",
                    "description": "OTP yang telah dikirimkan kepada user",
                    "example": "9898"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "User verified successfully"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "User verification failed, OTP is incorrect"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during user verification"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Forgot Password",
        "description": "Ini adalah API endpoint yang digunakan untuk mengirim request link reset password",
        "requestBody": {
          "description": "Request body untuk Forgot Password (request reset password)",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email dari user yang melakukan request link reset password",
                    "example": "johndoe@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Link reset password berhasil dikirimkan ke email user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "An email contain the password reset link has been sent to your email"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed to send password reset link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Email is required or Email does not exist"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Unable to send password reset link due to an unknown error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "tags": ["Auth"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Reset Password",
        "description": "Ini adalah API endpoint yang digunakan untuk reset password menggunakan token yang telah disediakan",

        "requestBody": {
          "description": "Request body untuk sukses Reset Password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "New password of the user",
                    "example": "87654321"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "description": "Confirm password of the user",
                    "example": "87654321"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully reset",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Your password has been changed successfully"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Password must be at least 8 characters or password does not match or password reset link no longer valid"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during the password reset process"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login a user",
        "description": "ini adalah API endpoint untuk autentikasi dan login user menggunakan email dan password",
        "requestBody": {
          "description": "Request body untuk success login",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email address of the user",
                    "example": "johndoe@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password of the user",
                    "example": "12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User Login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Login success!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "description": "Token of the user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed to Login User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": " Email or password incorrect"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "An unexpected error occured during the login process "
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/update": {
      "put": {
        "tags": ["Users"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Update a user",
        "description": "Ini adalah API endpoint untuk melakukan update informasi user pada kolom informasi yang tertera",
        "requestBody": {
          "description": "Request body for User Update",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Email of the user",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone Number of the user",
                    "example": "1234567890"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country of the user",
                    "example": "Indonesia"
                  },
                  "city": {
                    "type": "string",
                    "description": "City of the user",
                    "example": "Jakarta"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Profile Image of the user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User account information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Your Profile Updated successfully"
                    },
                    "data": {
                      "tipe": "object",
                      "properties": {
                        "updatedUser": {
                          "type": "object",
                          "description": "Data of the user",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the user",
                              "example": "John Doe"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed to Update User Account Information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Invalid authorization token format"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during the user update process"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/update-password": {
      "put": {
        "tags": ["Users"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Update a user password",
        "description": "Ini adalah API endpoint untuk melakukan update password user pada kolom yang tertera",
        "requestBody": {
          "description": "Request body for User Update password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "description": "Old password of the user",
                    "example": "password123"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "New password of the user",
                    "example": "newpassword123"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "description": "Confirm password of the user",
                    "example": "newpassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User account information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Password updated successfully"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed to Update User Password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Old password is incorrect"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during the password update process"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/me": {
      "get": {
        "tags": ["Users"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Get user details",
        "description": "Ini adalah API endpoint untuk mendapatkan detail dari user yang terautentikasi",
        "responses": {
          "200": {
            "description": "User details successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "User Get successfully"
                    },
                    "data": {
                      "description": "Data of the user",
                      "type": "object",
                      "properties": {
                        "user": {
                          "description": "Data of the user",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the user",
                              "type": "string",
                              "example": "John Doe"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed to retrieve user details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Invalid authorization token format"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during the retrieving process of user details"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/category": {
      "post": {
        "tags": ["Category"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Create a new category",
        "description": "Ini adalah API endpoint untuk membuat category",
        "requestBody": {
          "description": "Request body untuk membuat category",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "UI/UX Design"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image for category"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Course created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "newCat": {
                          "type": "object",
                          "description": "Data new course",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "UI/UX Design"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Created New Category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Name is required"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Create Category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during create category"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Get All Category",
        "description": "Ini adalah API endpoint untuk menampilkan data category",
        "responses": {
          "200": {
            "description": "All category fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "All categories fetched successfully"
                    },
                    "data": {
                      "description": "Courses data",
                      "type": "object",
                      "properties": {
                        "categories": {
                          "description": "Data of the category",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "UI/UX Design"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Get Category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "No category data"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Get Category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during get category data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/category/{id}": {
      "get": {
        "tags": ["Category"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the Category to retrieve"
          }
        ],
        "summary": "Get Category By ID",
        "description": "Ini adalah API endpoint untuk menampilkan data category sesuai ID",
        "responses": {
          "200": {
            "description": "Category fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "Category 1 found!"
                    },
                    "data": {
                      "description": "category data",
                      "type": "object",
                      "properties": {
                        "course": {
                          "description": "Data of the course",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "UI/UX Design"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Get Category Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Category not found"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Get Category Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during get category data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Category"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the Category to retrieve"
          }
        ],
        "summary": "Update Category By ID",
        "description": "Ini adalah API endpoint untuk mengupdate category",
        "requestBody": {
          "description": "Request body untuk mengupdate category",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "UI/UX Design"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image for category"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Category updated successfully"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Updated Category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Name is required"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Update Category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during update category"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Category"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            },
            "description": "ID of the category to retrieve"
          }
        ],
        "summary": "Delete Category By ID",
        "description": "Ini adalah API endpoint untuk menghapus data category",
        "responses": {
          "200": {
            "description": "Delete a category by ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "Category deleted"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Delete Course Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Course not found"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Delete Course Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during get course data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/course": {
      "post": {
        "tags": ["Course"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Create new course",
        "description": "Ini adalah API endpoint untuk membuat course",
        "requestBody": {
          "description": "Request body untuk membuat course",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "UI/UX Introduction to Figma"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "level": {
                    "type": "string",
                    "example": "Intermediate"
                  },
                  "categoryId": {
                    "type": "integer",
                    "example": 2
                  },
                  "description": {
                    "type": "string",
                    "example": "Figma is a tool for design an UI or UX. Figma also can make a prototype for present an UI/UX project"
                  },
                  "benefits": {
                    "type": "string",
                    "format": "text",
                    "example": "1. Make prototype app"
                  },
                  "classCode": {
                    "type": "string",
                    "example": "UI001"
                  },
                  "totalModule": {
                    "type": "integer",
                    "example": 6
                  },
                  "type": {
                    "type": "string",
                    "example": "Premium"
                  },
                  "price": {
                    "type": "integer",
                    "example": 150000
                  },
                  "totalDuration": {
                    "type": "integer",
                    "example": 36000
                  },
                  "courseBy": {
                    "type": "string",
                    "example": "Halo Designer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Course created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Course created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "newCourse": {
                          "type": "object",
                          "description": "Data new course"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Created New Course",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "All value fields are required"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Create Course",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during create course"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Course"],
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Intermediate"
            },
            "description": "Query level"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query type"
          },
          {
            "name": "categoryName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query category name"
          },
          {
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "description": "Query newest data"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query search"
          }
        ],
        "summary": "Get All Course",
        "description": "Ini adalah API endpoint untuk menampilkan data course",
        "responses": {
          "200": {
            "description": "All courses fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "All courses fetched successfully"
                    },
                    "data": {
                      "description": "Courses data",
                      "type": "object",
                      "properties": {
                        "courses": {
                          "description": "Data of the course",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "Digital Marketing"
                            },
                            "imageUrl": {
                              "type": "string",
                              "format": "url",
                              "example": "https://ik.imagekit.io/cbtfkvupm4/gostudy/course-image/Digital_Marketing_8SwRF29kS.jpg"
                            },
                            "imageId": {
                              "type": "string",
                              "example": "65649fca88c257da33e1c374"
                            },
                            "level": {
                              "type": "string",
                              "example": "Beginner"
                            },
                            "categoryId": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1
                            },
                            "description": {
                              "type": "string",
                              "example": "Digital Marketing adalah ilmu untuk memasarkan sesuatu di ranah digital seperti social media."
                            },
                            "benefits": {
                              "type": "string",
                              "example": "1. Memasarkan suatu produk secara digital"
                            },
                            "classCode": {
                              "type": "string",
                              "example": "DM001"
                            },
                            "totalModule": {
                              "type": "integer",
                              "format": "int32",
                              "example": 8
                            },
                            "type": {
                              "type": "string",
                              "example": "Free"
                            },
                            "price": {
                              "type": "number",
                              "format": "float",
                              "example": 0
                            },
                            "totalDuration": {
                              "type": "integer",
                              "format": "int32",
                              "example": "36000"
                            },
                            "courseBy": {
                              "type": "string",
                              "example": "Jo Xander"
                            },
                            "createdBy": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Get Courses Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "No course data"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Get Course Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during get category data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/course/{id}": {
      "get": {
        "tags": ["Course"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the course to retrieve"
          }
        ],
        "summary": "Get Course By ID",
        "description": "Ini adalah API endpoint untuk menampilkan data course sesuai ID",
        "responses": {
          "200": {
            "description": "Course fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "Course 1 found!"
                    },
                    "data": {
                      "description": "Courses data",
                      "type": "object",
                      "properties": {
                        "course": {
                          "description": "Data of the course",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "Digital Marketing"
                            },
                            "imageUrl": {
                              "type": "string",
                              "format": "url",
                              "example": "https://ik.imagekit.io/cbtfkvupm4/gostudy/course-image/Digital_Marketing_8SwRF29kS.jpg"
                            },
                            "imageId": {
                              "type": "string",
                              "example": "65649fca88c257da33e1c374"
                            },
                            "level": {
                              "type": "string",
                              "example": "Beginner"
                            },
                            "categoryId": {
                              "type": "integer",
                              "format": "int64",
                              "example": 1
                            },
                            "description": {
                              "type": "string",
                              "example": "Digital Marketing adalah ilmu untuk memasarkan sesuatu di ranah digital seperti social media."
                            },
                            "benefits": {
                              "type": "string",
                              "example": "1. Memasarkan suatu produk secara digital"
                            },
                            "classCode": {
                              "type": "string",
                              "example": "DM001"
                            },
                            "totalModule": {
                              "type": "integer",
                              "format": "int32",
                              "example": 8
                            },
                            "type": {
                              "type": "string",
                              "example": "Free"
                            },
                            "price": {
                              "type": "number",
                              "format": "float",
                              "example": 0
                            },
                            "totalDuration": {
                              "type": "integer",
                              "format": "int32",
                              "example": "36000"
                            },
                            "courseBy": {
                              "type": "string",
                              "example": "Jo Xander"
                            },
                            "createdBy": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Get Course Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Course not found"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Get Course Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during get course data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Course"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the Course to retrieve"
          }
        ],
        "summary": "Update Course By ID",
        "description": "Ini adalah API endpoint untuk mengupdate course",
        "requestBody": {
          "description": "Request body untuk mengupdate course",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "UI/UX Introduction to Figma"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "level": {
                    "type": "string",
                    "example": "Intermediate"
                  },
                  "categoryId": {
                    "type": "integer",
                    "example": 2
                  },
                  "description": {
                    "type": "string",
                    "example": "Figma is a tool for design an UI or UX. Figma also can make a prototype for present an UI/UX project"
                  },
                  "benefits": {
                    "type": "string",
                    "example": "1. Make prototype app"
                  },
                  "classCode": {
                    "type": "string",
                    "example": "UI001"
                  },
                  "totalModule": {
                    "type": "integer",
                    "example": 6
                  },
                  "type": {
                    "type": "string",
                    "example": "Premium"
                  },
                  "price": {
                    "type": "integer",
                    "example": 150000
                  },
                  "totalDuration": {
                    "type": "integer",
                    "example": 36000
                  },
                  "courseBy": {
                    "type": "string",
                    "example": "Halo Designer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Course updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Course updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "updatedCourse": {
                          "type": "object",
                          "description": "Data updated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Updated Course",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "All value fields are required"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Update Course",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during update course"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Course"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            },
            "description": "ID of the course to retrieve"
          }
        ],
        "summary": "Delete Course By ID",
        "description": "Ini adalah API endpoint untuk menghapus data course",
        "responses": {
          "200": {
            "description": "Delete a course by ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "Course deleted"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Delete Course Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Course not found"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Delete Course Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during get course data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chapter": {
      "post": {
        "tags": ["Chapter"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Create a new chapter",
        "description": "Ini adalah API endpoint untuk membuat chapter",
        "requestBody": {
          "description": "Request body untuk membuat chapter",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noChapter": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Mengenal Tools di Figma"
                  },
                  "courseId": {
                    "type": "integer",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chapter created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Chapter created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "newChapter": {
                          "type": "object",
                          "description": "Data new course",
                          "properties": {
                            "noChapter": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "Mengenal Tools di Figma"
                            },
                            "courseId": {
                              "type": "integer",
                              "example": 2
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Created New Chapter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "All value fields are required!"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Create Category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during create chapter"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Chapter"],
        "summary": "Get All Chapter",
        "description": "Ini adalah API endpoint untuk menampilkan data chapter",
        "responses": {
          "200": {
            "description": "All chapter fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "All chapters fetched successfully"
                    },
                    "data": {
                      "description": "Chapters data",
                      "type": "object",
                      "properties": {
                        "chapters": {
                          "description": "Data of the chapter",
                          "type": "object",
                          "properties": {
                            "noChapter": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "Mengenal Tools di Figma"
                            },
                            "courseId": {
                              "type": "integer",
                              "example": 2
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Get Chapter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "No chapter data"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Get Category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during get chapter data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chapter/{id}": {
      "get": {
        "tags": ["Chapter"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the Chapter to retrieve"
          }
        ],
        "summary": "Get Chapter By ID",
        "description": "Ini adalah API endpoint untuk menampilkan data chapter sesuai ID",
        "responses": {
          "200": {
            "description": "Chapter fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "Category 1 found!"
                    },
                    "data": {
                      "description": "category data",
                      "type": "object",
                      "properties": {
                        "id": {},
                        "noChapter": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Mengenal Tools di Figma"
                        },
                        "courseId": {
                          "type": "integer",
                          "example": 2
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Get Chapter Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Chapter not found"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Get Category Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during get chapter data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Chapter"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the Chapter to retrieve"
          }
        ],
        "summary": "Update Chapter By ID",
        "description": "Ini adalah API endpoint untuk mengupdate chapter",
        "requestBody": {
          "description": "Request body untuk mengupdate chapter",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "noChapter": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Mengenal Tools di Figma"
                  },
                  "courseId": {
                    "type": "integer",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chapter updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Chapter updated successfully"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Updated Chapter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "All values are required"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Update Chapter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during update chapter"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Chapter"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            },
            "description": "ID of the chapter to retrieve"
          }
        ],
        "summary": "Delete Chapter By ID",
        "description": "Ini adalah API endpoint untuk menghapus data chapter",
        "responses": {
          "200": {
            "description": "Delete a chapter by ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "Chapter deleted"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Delete Course Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Course not found"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Delete Course Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during get course data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/module": {
      "post": {
        "tags": ["Module"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Create new Module",
        "description": "Ini adalah API endpoint untuk membuat module",
        "requestBody": {
          "description": "Request body untuk membuat module",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "no": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "UI/UX Introduction to Figma"
                  },
                  "description": {
                    "type": "string",
                    "example": "Figma is a tool for design an UI or UX. Figma also can make a prototype for present an UI/UX project"
                  },
                  "chapterId": {
                    "type": "integer",
                    "example": 1
                  },
                  "video": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Module created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Module created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "newModule": {
                          "type": "object",
                          "description": "Data new module",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "no": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "UI/UX Introduction to Figma"
                            },
                            "description": {
                              "type": "string",
                              "example": "Figma is a tool for design an UI or UX. Figma also can make a prototype for present an UI/UX project"
                            },
                            "chapterId": {
                              "type": "integer",
                              "example": 1
                            },
                            "video": {
                              "type": "string",
                              "format": "binary"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Created New Module",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "All value fields are required"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Create Module",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during create module"
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Module"],
        "summary": "Get All Modules",
        "description": "Ini adalah API endpoint untuk menampilkan data module",
        "responses": {
          "200": {
            "description": "All modules fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "All modules fetched successfully"
                    },
                    "data": {
                      "description": "Modules data",
                      "type": "object",
                      "properties": {
                        "modules": {
                          "description": "Data of the module",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "no": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "UI/UX Introduction to Figma"
                            },
                            "description": {
                              "type": "string",
                              "example": "Figma is a tool for design an UI or UX. Figma also can make a prototype for present an UI/UX project"
                            },
                            "chapterId": {
                              "type": "integer",
                              "example": 1
                            },
                            "videoUrl": {
                              "type": "string",
                              "format": "binary"
                            },
                            "videoId": {
                              "type": "string"
                            },
                            "duration": {
                              "type": "integer"
                            },
                            "createdBy": {
                              "type": "integer",
                              "example": 1
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Get Modules Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "No module data"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Get Module Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during get module data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/module/{id}": {
      "get": {
        "tags": ["Module"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the Module to retrieve"
          }
        ],
        "summary": "Get Module By ID",
        "description": "Ini adalah API endpoint untuk menampilkan data module sesuai ID",
        "responses": {
          "200": {
            "description": "Module fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "Module 1 found!"
                    },
                    "data": {
                      "description": "category data",
                      "type": "object",
                      "properties": {
                        "module": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "no": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "UI/UX Introduction to Figma"
                            },
                            "description": {
                              "type": "string",
                              "example": "Figma is a tool for design an UI or UX. Figma also can make a prototype for present an UI/UX project"
                            },
                            "chapterId": {
                              "type": "integer",
                              "example": 1
                            },
                            "videoUrl": {
                              "type": "string",
                              "format": "binary"
                            },
                            "videoId": {
                              "type": "string"
                            },
                            "duration": {
                              "type": "integer"
                            },
                            "createdBy": {
                              "type": "integer",
                              "example": 1
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Get Module Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Module not found"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Get Module Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during get module data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Module"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the Module to retrieve"
          }
        ],
        "summary": "Update Module By ID",
        "description": "Ini adalah API endpoint untuk mengupdate module",
        "requestBody": {
          "description": "Request body untuk mengupdate module",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "no": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "UI/UX Introduction to Figma"
                  },
                  "description": {
                    "type": "string",
                    "example": "Figma is a tool for design an UI or UX. Figma also can make a prototype for present an UI/UX project"
                  },
                  "chapterId": {
                    "type": "integer",
                    "example": 1
                  },
                  "video": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Module updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Module updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "updatedModule": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "no": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "UI/UX Introduction to Figma"
                            },
                            "description": {
                              "type": "string",
                              "example": "Figma is a tool for design an UI or UX. Figma also can make a prototype for present an UI/UX project"
                            },
                            "chapterId": {
                              "type": "integer",
                              "example": 1
                            },
                            "videoUrl": {
                              "type": "string",
                              "format": "binary"
                            },
                            "videoId": {
                              "type": "string"
                            },
                            "duration": {
                              "type": "integer"
                            },
                            "createdBy": {
                              "type": "integer",
                              "example": 1
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Updated Module",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "All values are required"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Update Module",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during update module"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Module"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            },
            "description": "ID of the module to retrieve"
          }
        ],
        "summary": "Delete Module By ID",
        "description": "Ini adalah API endpoint untuk menghapus data module",
        "responses": {
          "200": {
            "description": "Module a chapter by ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Status of the request",
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "description": "Message of the request",
                      "type": "string",
                      "example": "Module deleted"
                    }
                  }
                }
              }
            }
          },
          "4xx": {
            "description": "Failed Delete Module Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Module not found"
                    }
                  }
                }
              }
            }
          },
          "5xx": {
            "description": "Error Delete Module Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the request",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message of the request",
                      "example": "Error occured during delete module data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
